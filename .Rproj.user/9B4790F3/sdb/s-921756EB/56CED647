{
    "contents" : "---\nlayout: post\ntitle:  \"Compute mean for activities - all format\"\ncategories: [jekyll]\ntags: [mtus]\n---\n\n\n<span class='newthought'>This post</span> will demonstrate how to simply calcualte mean time of different activities from a *PP-short* dataset. \n\n```{r, warning=FALSE, message=FALSE}\n\n# Load the libraries and data\nlibrary(plyr)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(mtusRlocal)\nlibrary(knitr)\nlibrary(reshape2)\nlibrary(xtable)\n\ndta = read.csv('/Users/giacomovagni/site/motsetchoses/_data/dtaSpells.csv')\n```\n\n### Mean of Short PP file \n\nThe `sum` of all activites duration for each individuals for a day must be **1440**. \n\n```{r}\ndta %>% group_by(id, day) %>% summarise(sum(duration))\n```\n\nThe individual mean can be computed such as : \n```{r}\ndta %>% group_by(id, activities) %>% summarise(mean(duration))\n```\n\nThe aggregate mean by day : \n```{r}\ndta %>% group_by(day, activities) %>% summarise(mean(duration))\n```\n\nThe aggregate mean by activities, regardless of the day : \n```{r}\ndta %>% group_by(activities) %>% summarise(mean(duration))\n```\n\n### Mean of Long PP file \n\n```{r}\n# transform \ndtaPP= dta[rep(1:nrow(dta), dta$duration), ] %>% \n  select(-duration) %>% \n  group_by(id, day) %>% \n  mutate(Time = 1:n()) \n\ndtaPP %>% group_by(id, day, activities) %>% summarise(time = n()) %>% # transform back to short PP \n  group_by(activities, day) %>% \n  summarise(mean(time))\n```\n\n### Mean of Sequence File \n\n\n#### Aggregate  \n\nThe mean time of activities for long PP can be computed by the following codes : \n\n```{r}\n# transform PP to Wide \ndtaSeq = dta[rep(1:nrow(dta), dta$duration), ] %>% \n  select(-duration) %>% \n  group_by(id, day) %>% \n  mutate(Time = 1:n()) %>% # PP \n  arrange(id, day, Time) %>% select(-epnum) %>% spread(Time, activities) # Wide \n\n# colnames renames  \ncolnames(dtaSeq) = c('idind', 'day', paste(\"main\", 1:1440, sep = \"\"))\n```\n\n```{r}\nN = count(dtaSeq) \nN \n# by act only\ndtaSeq %>% select(idind, day, matches('main')) %>% \n  melt(id.vars = c(\"idind\", \"day\")) %>% group_by(value) %>% summarise(n = n()) %>% # back to PP \n  mutate(time =  (n* 1) / 4 ) %>% # divide by count \n  mutate(TimeClock(time)) \n\n# by act and days \ndtaSeq %>% select(idind, day, matches('main')) %>% \n  melt(id.vars = c(\"idind\", \"day\")) %>% group_by(day, value) %>% summarise(n = n()) %>% \n  mutate(time =  (n* 1) / 2) %>% # divide by count \n  mutate(TimeClock(time)) \n\n# if you haev the full data then group by what you want  \ndtaSeq %>% select(idind, day, matches('main')) %>% \n  melt(id.vars = c(\"idind\", \"day\")) %>% group_by(idind, day, value) %>% summarise(n = n()) %>% \n  group_by(value) %>% summarise( mean(n) ) \n  mutate(TimeClock(time)) \n  \n# or simply activities \n  dtaSeq %>% select(idind, day, matches('main')) %>% \n  melt(id.vars = c(\"idind\", \"day\")) %>% group_by(idind, day, value) %>% summarise(n = n()) %>% \n  group_by(value, day) %>% summarise( mean(n) ) \n  mutate(TimeClock(time)) \n``` \n\n#### Individual\n\nFrom a PP file  \n\n```{r}\nhead(dtaPP)\n```\n\n\n```{r}\ndtaPP_sum = dtaPP %>% \n  group_by(id, day, activities) %>% \n  summarise(n = n() * 1) %>% # multiply by the interval - here is 1 minutes \n  mutate(activities = paste('act_', activities, sep = '')) %>% \n  spread(activities, n, fill = 0) \n\ndtaPP_sum\n\ndtaPP_sum %>% select(-id, -day) %>% summarise_each(funs(mean))\n```\n\n\n\n\n\n",
    "created" : 1459008013431.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3647342331",
    "id" : "56CED647",
    "lastKnownWriteTime" : 1459014016,
    "path" : "~/site/motsetchoses/_source/2016-03-25-compute-mean-PP-Short.Rmd",
    "project_path" : "_source/2016-03-25-compute-mean-PP-Short.Rmd",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_markdown"
}