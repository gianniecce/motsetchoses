{
    "contents" : "---\nlayout: post\ntitle:  \"Compute means\"\ncategories: [jekyll, rstats]\ntags: [knitr, servr, httpuv, websocket]\n---\n\nhey\n\n```{r, warning=FALSE, message=FALSE}\nlibrary(plyr)  \nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(mtusRlocal)\nlibrary(knitr)\nlibrary(reshape2)\nlibrary(xtable)\n\nload('/Users/giacomovagni/site/motsetchoses/_data/dtaEpisode.RData')\ndtaEpisode$weekend = ifelse(dtaEpisode$day == 1 | dtaEpisode$day == 7, 'weekend', 'weekdays')\n```\n\n```{r, fig.fullwidth = TRUE}\nkable(dtaEpisode [1:2, 1:5])\n```\n\n\n\n```{r}\ndtaEpisodeSumTime = dtaEpisode %>% group_by(idno, weekend, day, av) %>% summarise(sumtime = sum(time)) %>% group_by(idno) %>% mutate(nday = n_distinct(day)) \n\n# by ind \ndtaEpisodeSumTime %>% group_by(av, weekend) %>% summarise(mean(sumtime))\n\n# check \ndtaEpisode %>% group_by(idno, day, av) %>% summarise(sumtime = sum(time)) %>% mutate(sum(sumtime))\n\n# spread \ndtaEpisodeSumTimeSpread = dtaEpisodeSumTime %>% spread(av, sumtime, fill = 0)\n\n# does everybody has filled 2 days? \ntable(dtaEpisodeSumTimeSpread$nday) \n```\n\n```{r}\nkable(dtaEpisodeSumTimeSpread[1:10,1:10])\n```\n\n```{r}\naggregate(dtaEpisodeSumTimeSpread$`1` ~ dtaEpisodeSumTimeSpread$weekend, FUN = mean) \ndtaEpisodeSumTimeSpread %>% select(-idno, -nday) %>% group_by(weekend) %>% summarise_each(funs(mean))\n\ndtMelt = dtaEpisodeSumTimeSpread %>% melt(id.vars = c('idno', 'weekend'))\ndtMelt %>% group_by(weekend, variable) %>% summarise(mv = mean(value)) %>% spread(variable, mv)\n\n# dtaEpisodeSumTime  %>% group_by() %>% group_by(av, weekend) %>% summarise(mv = mean(sumtime)) \n```\n\n\nFunction \n```{r}\nTimeLongToWide = function(dta = weekend){\n  \n  # Sequence \n  seqDay = dta[rep(1:nrow(dta), dta[,'time'] ), -3] %>%\n    group_by(id) %>% \n    mutate( Time = 1:n() ) %>%\n    spread(Time, av)\n  \n  seqDay = as.data.frame(seqDay)\n  \n  row.names(seqDay) <- seqDay[,'id']\n  seqDay = seqDay [,-1]\n  \n  return(seqDay)\n}\n\ndtaWeekend = dtaEpisode %>% filter(weekend == 'weekend') %>% select(id = idno, av, time)\n\n# use it \ndtaWideWeekend = TimeLongToWide(dtaWeekend)\n```\n\n```{r}\nkable(dtaWideWeekend [1:4, 1:10]) \n```\n\n```{r}\n# id\ndtaWideWeekend$idno = row.names(dtaWideWeekend)\n# melt \ndtaMelt = dtaWideWeekend %>% melt(id.vars = \"idno\") \n```\n\n```{r}\nkable(dtaMelt %>% head())\n```\n\n\n```{r}\nintervals = 1\ndtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(idno) %>% mutate(sum(nsum))\n```\n\n```{r}\ndtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(value) %>% summarise(sum(nsum) / n_distinct(idno))\ndtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(value) %>% summarise(mean(nsum))\n```\n\n\n",
    "created" : 1453309761927.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "686665436",
    "id" : "D49AA797",
    "lastKnownWriteTime" : 1453311634,
    "path" : "~/site/motsetchoses/_source/2016-01-20-compute-mean.Rmd",
    "project_path" : "_source/2016-01-20-compute-mean.Rmd",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_markdown"
}