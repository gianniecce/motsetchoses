```
```{r}
dtaEpisodeSumTime = dtaEpisode %>% group_by(idno, weekend, day, av) %>% summarise(sumtime = sum(time)) %>% group_by(idno) %>% mutate(nday = n_distinct(day))
dtaEpisodeSumTime %>% group_by(av, weekend) %>% summarise(mean(sumtime))
dtaEpisode %>% head()
table(dtaEpisode$weekend, dtaEpisode$day)
library(knitr)
kable(dtaEpisode)
kable(dtaEpisode[1:4, ])
dtaEpisodeSumTime = dtaEpisode %>% group_by(idno, weekend, day, av) %>% summarise(sumtime = sum(time)) %>% group_by(idno) %>% mutate(nday = n_distinct(day))
dtaEpisodeSumTime %>% group_by(av, weekend) %>% summarise(mean(sumtime))
dtaEpisodeSumTime %>% group_by(av, weekend) %>% summarise(mean(sumtime))
# check
dtaEpisode %>% group_by(idno, day, av) %>% summarise(sumtime = sum(time)) %>% mutate(sum(sumtime))
# does everybody has 2 ?
table(dtaEpisodeSumTimeSpread$nday)
```{r}
dtaEpisodeSumTime = dtaEpisode %>% group_by(idno, weekend, day, av) %>% summarise(sumtime = sum(time)) %>% group_by(idno) %>% mutate(nday = n_distinct(day))
dtaEpisodeSumTime %>% group_by(av, weekend) %>% summarise(mean(sumtime))
# check
dtaEpisodeSumTime %>% group_by(av, weekend) %>% summarise(mean(sumtime))
aggregate(dtaEpisodeSumTimeSpread$`1` ~ dtaEpisodeSumTimeSpread$weekend, FUN = mean)
dtaEpisodeSumTimeSpread %>% select(-idno, -nday) %>% group_by(weekend) %>% summarise_each(funs(mean))
dtaEpisodeSumTimeSpread = dtaEpisodeSumTime %>% spread(av, sumtime, fill = 0)
dtaEpisodeSumTimeSpread %>% head()
# does everybody has filled 2 days?
table(dtaEpisodeSumTimeSpread$nday)
```
```{r}
aggregate(dtaEpisodeSumTimeSpread$`1` ~ dtaEpisodeSumTimeSpread$weekend, FUN = mean)
dtaEpisodeSumTimeSpread %>% select(-idno, -nday) %>% group_by(weekend) %>% summarise_each(funs(mean))
dtaEpisodeSumTimeSpread
dtMelt = dtaEpisodeSumTimeSpread %>% melt(id.vars = c('idno', 'weekend'))
dtMelt %>% group_by(weekend, variable) %>% summarise(mv = mean(value)) %>% spread(variable, mv)
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
```{r}
aggregate(dtaEpisodeSumTimeSpread$`1` ~ dtaEpisodeSumTimeSpread$weekend, FUN = mean)
dtaEpisodeSumTimeSpread %>% select(-idno, -nday) %>% group_by(weekend) %>% summarise_each(funs(mean))
dtaEpisodeSumTimeSpread
dtMelt = dtaEpisodeSumTimeSpread %>% melt(id.vars = c('idno', 'weekend'))
dtMelt %>% group_by(weekend, variable) %>% summarise(mv = mean(value)) %>% spread(variable, mv)
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
dtaEpisode[1:4, ]
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
load('/Users/giacomovagni/site/motsetchoses/_data/dtaEpisode.RData')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
dtaEpisode[1:4, ]
load('/Users/giacomovagni/site/motsetchoses/_data/dtaEpisode.RData')
---
```{r, warning=FALSE, message=FALSE}
library(plyr)
library(dplyr)
library(tidyr)
library(mtusRlocal)
library(knitr)
library(reshape2)
load('/Users/giacomovagni/site/motsetchoses/_data/dtaEpisode.RData')
# dtaEpisode %>% head()
dtaEpisode$weekend = ifelse(dtaEpisode$day == 1 | dtaEpisode$day == 7, 'weekend', 'weekdays')
# table(dtaEpisode$weekend, dtaEpisode$day)
```
```{r}
dtaEpisode[1:4, ]
```
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
load('/Users/giacomovagni/site/_data/dtaEpisode.RData')
load('/Users/giacomovagni/site/motsetchoses/_data/dtaEpisode.RData')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
dtaEpisode$weekend = ifelse(dtaEpisode$day == 1 | dtaEpisode$day == 7, 'weekend', 'weekdays')
dtaEpisode
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
---
layout: post
title:  "Compute mean time of activities"
categories: [rstats, sequence]
tags: [combinatorics, permutation]
---
```{r, warning=FALSE, message=FALSE}
library(plyr)
library(dplyr)
library(tidyr)
library(mtusRlocal)
library(knitr)
library(reshape2)
load('/Users/giacomovagni/site/motsetchoses/_data/dtaEpisode.RData')
# dtaEpisode %>% head()
dtaEpisode$weekend = ifelse(dtaEpisode$day == 1 | dtaEpisode$day == 7, 'weekend', 'weekdays')
# table(dtaEpisode$weekend, dtaEpisode$day)
```
(
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
```{r}
dtaEpisode[1:4, ]
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
xtable(dtaEpisode [1:2, ] )
library(reshape2)
library(xtable)
xtable( dtaEpisode [1:2, ] )
?xtable
xtable( dtaEpisode [1:2, ], type = "html")
xtable( dtaEpisode [1:2, ], type = "html")
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
xtable( dtaEpisode [1:2, ], type = "html")
print( xtable( dtaEpisode [1:2, ]), type = "html")
print( xtable( dtaEpisode [1:2, ]), type = "html")
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
kable(dtaEpisode [1:2, ])
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
dtaEpisodeSumTime = dtaEpisode %>% group_by(idno, weekend, day, av) %>% summarise(sumtime = sum(time)) %>% group_by(idno) %>% mutate(nday = n_distinct(day))
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
dtaEpisodeSumTime %>% group_by(av, weekend) %>% summarise(mean(sumtime))
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
dtaEpisodeSumTimeSpread
dtaEpisodeSumTime = dtaEpisode %>% group_by(idno, weekend, day, av) %>% summarise(sumtime = sum(time)) %>% group_by(idno) %>% mutate(nday = n_distinct(day))
# by ind
dtaEpisodeSumTime %>% group_by(av, weekend) %>% summarise(mean(sumtime))
# check
dtaEpisode %>% group_by(idno, day, av) %>% summarise(sumtime = sum(time)) %>% mutate(sum(sumtime))
# spread
dtaEpisodeSumTimeSpread = dtaEpisodeSumTime %>% spread(av, sumtime, fill = 0)
dtaEpisodeSumTimeSpread
kable(dtaEpisodeSumTimeSpread[,1:10])
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
aggregate(dtaEpisodeSumTimeSpread$`1` ~ dtaEpisodeSumTimeSpread$weekend, FUN = mean)
dtaEpisodeSumTimeSpread %>% select(-idno, -nday) %>% group_by(weekend) %>% summarise_each(funs(mean))
dtaEpisodeSumTimeSpread
dtaEpisodeSumTimeSpread %>% select(-idno, -nday) %>% group_by(weekend) %>% summarise_each(funs(mean))
dtMelt = dtaEpisodeSumTimeSpread %>% melt(id.vars = c('idno', 'weekend'))
dtMelt %>% group_by(weekend, variable) %>% summarise(mv = mean(value)) %>% spread(variable, mv)
dtaEpisodeSumTimeSpread %>% select(-idno, -nday) %>% group_by(weekend) %>% summarise_each(funs(mean))
dtMelt %>% group_by(weekend, variable) %>% summarise(mv = mean(value)) %>% spread(variable, mv)
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
TimeLongToWide = function(dta = weekend){
# Sequence
seqDay = dta[rep(1:nrow(dta), dta[,'time'] ), -3] %>%
group_by(id) %>%
mutate( Time = 1:n() ) %>%
spread(Time, av)
seqDay = as.data.frame(seqDay)
row.names(seqDay) <- seqDay[,'id']
seqDay = seqDay [,-1]
return(seqDay)
}
dtaWeekend = dtaEpisode %>% filter(weekend == 'weekend') %>% select(id = idno, av, time)
# use it
dtaWideWeekend = TimeLongToWide(dtaWeekend)
dtaWideWeekend
kable(dtaWideWeekend [1:2, 1:10])
```{r}
dtaWideWeekend [1:4, 1:5]
dtaWideWeekend$idno = row.names(dtaWideWeekend)
dtaWideWeekend$idno = row.names(dtaWideWeekend)
dtaMelt = dtaWideWeekend %>% melt(id.vars = "idno")
dtaMelt %>% head()
dtaWideWeekend [1:4, 1:5]
intervals = 1
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(idno) %>% mutate(sum(nsum))
intervals = 1
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(idno) %>% mutate(sum(nsum))
dtaMelt
dtaMelt %>% head()
kable(dtaMelt %>% head())
kable(dtaMelt %>% head())
intervals = 1
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(idno) %>% mutate(sum(nsum))
dtaMelt
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals)
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(value)
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(value) %>% summarise(n())
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(value)
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(value) %>% summarise(sum(nsum))
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(value) %>% summarise(mean(nsum))
kable(dtaWideWeekend [1:4, 1:10])
aggregate(dtaEpisodeSumTimeSpread$`1` ~ dtaEpisodeSumTimeSpread$weekend, FUN = mean)
dtaEpisodeSumTimeSpread %>% select(-idno, -nday) %>% group_by(weekend) %>% summarise_each(funs(mean))
aggregate(dtaEpisodeSumTimeSpread$`1` ~ dtaEpisodeSumTimeSpread$weekend, FUN = mean)
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(idno) %>% mutate(sum(nsum))
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(value) %>% summarise(mean(nsum))
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(idno) %>% mutate(sum(nsum))
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(value) %>% summarise(mean(nsum))
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals)
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(value) %>% summarise(mean(nsum))
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(value) %>% summarise(mean(nsum))
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals)
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(value) %>% summarise(mean(nsum))
dtaEpisodeSumTime  %>% group_by() %>% group_by(av, weekend) %>% summarise(mv = mean(sumtime))
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(value) %>% summarise(mean(nsum))
dtaMelt
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(value) %>% summarise(sum(nsum) / n_distinct(idno))
dtaMelt %>% group_by(idno, value) %>% summarise(nsum = n() * intervals) %>% group_by(value) %>% summarise(mean(nsum))
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
60 + 45
150 - 60 + 45
150 - (60 + 45)
150 - (60 + 55)
60 / 30
20 * 4
35 + 60 + 55
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
1 / 10000
1 / 1000
1 - (1 / 1000)
1 - 0.999
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
hey
```{r, warning=FALSE, message=FALSE}
library(plyr)
library(dplyr)
library(tidyr)
library(mtusRlocal)
library(knitr)
library(reshape2)
library(xtable)
load('/Users/giacomovagni/site/motsetchoses/_data/dtaEpisode.RData')
dtaEpisode$weekend = ifelse(dtaEpisode$day == 1 | dtaEpisode$day == 7, 'weekend', 'weekdays')
```
```{r, fig.fullwidth = TRUE}
kable(dtaEpisode [1:2, 1:5])
```
dtaEpisode
dtaEpisode[1:2, 1:19]
dtaEpisode %>% group_by(hldid) %>% mutate(ncouple = n_distinct(idind)) %>% select(idind, ncouple)
dtaEpisode$idno
dtaEpisode %>% group_by(hldid) %>% mutate(ncouple = n_distinct(idno))
dtaEpisode %>% group_by(hldid) %>% mutate(ncouple = n_distinct(idno)) %>% select(idno, hldid, ncouple)
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
layout: post
title:  "Add a sum line"
categories: [rstats]
tags: [rstats]
---
```{r, warning=FALSE, message=FALSE}
library(plyr)
library(dplyr)
library(tidyr)
library(mtusRlocal)
library(knitr)
library(reshape2)
library(xtable)
load('/Users/giacomovagni/site/motsetchoses/_data/dtaEpisode.RData')
dtaEpisode$weekend = ifelse(dtaEpisode$day == 1 | dtaEpisode$day == 7, 'weekend', 'weekdays')
```
dtaEpisode
load('/Users/giacomovagni/site/motsetchoses/_data/dtaSimple.RData')
dtaSimple
dtaSimple$av1
dtaSimple %>% group_by(sex) %>% summarise(av1)
dtaSimple %>% group_by(sex) %>% summarise(mean(av1))
dtaSimple %>% group_by(id) %>% summarise(mean(av1))
dtaSimple %>% group_by(idno) %>% summarise(mean(av1))
dtaSimple %>% select(matches('av'))
dtaSimple %>% group_by(idno) %>% select(matches('av')) %>% summarise(funs(mean))
select(matches('av')) %>% summarise_each(funs(mean))
dtaSimple %>% group_by(idno) %>%
select(matches('av')) %>% summarise_each(funs(mean))
dtaSimple %>% group_by() %>%
select(matches('av')) %>% summarise_each(funs(mean))
dtaSimple %>% group_by() %>%
select(matches('av')) %>% summarise_each(funs(mean)) %>%
melt()
dtaSimple %>% group_by(sex) %>%
select(matches('av')) %>% summarise_each(funs(mean)) %>%
melt(id.vars = 'sex')
dtaSimple %>% group_by(sex) %>%
select(matches('av')) %>% summarise_each(funs(mean))
dtaSimple %>% group_by(sex) %>%
select(matches('av')) %>% summarise_each(funs(mean)) %>%
melt(id.vars = 'sex') %>% spread(sex, value)
dtaSimple %>% group_by(sex) %>%
select(matches('av')) %>% summarise_each(funs(mean)) %>%
melt(id.vars = 'sex') %>% spread(sex, value) %>%
summarise(value = "z Sum", FEMALE = 1444, MALE = 1440)
dtaSimple %>% group_by(sex) %>%
select(matches('av')) %>% summarise_each(funs(mean)) %>%
melt(id.vars = 'sex') %>% spread(sex, value) %>%
summarise(value = "z Sum", FEMALE = 1444, MALE = 1440) %>%
merge(datSum, ., all = T) %>%
arrange(as.character(value))
dtaSimple %>% group_by(sex) %>%
select(matches('av')) %>% summarise_each(funs(mean)) %>%
melt(id.vars = 'sex') %>% spread(sex, value) %>%
summarise(value = "z Sum", FEMALE = 1444, MALE = 1440) %>%
merge(dtaSimple, ., all = T) %>%
arrange(as.character(value))
dtaSimple %>% group_by(sex) %>%
select(matches('av')) %>% summarise_each(funs(mean)) %>%
melt(id.vars = 'sex') %>% spread(sex, value) %>%
summarise(value = "z Sum", FEMALE = 1444, MALE = 1440)
dt = dtaSimple %>% group_by(sex) %>%
select(matches('av')) %>% summarise_each(funs(mean)) %>%
melt(id.vars = 'sex') %>% spread(sex, value)
dt %>% summarise(value = "z Sum", FEMALE = 1444, MALE = 1440)
dt %>% summarise(value = "z Sum", FEMALE = 1444, MALE = 1440) %>%
merge(dt, ., all = T) %>%
arrange(as.character(value))
dt %>% summarise(value = "z Sum", FEMALE = 1444, MALE = 1440) %>%
merge(dt, ., all = F) %>%
arrange(as.character(value))
dt %>% summarise(variable = "z Sum", FEMALE = 1444, MALE = 1440) %>%
merge(dt, ., all = T) %>%
arrange(as.character(value))
group_by(idno) %>% summarise(mean(av1))
dt %>% summarise(value = "z Sum", FEMALE = 1444, MALE = 1440)
dtaSimple %>% group_by(sex) %>%
select(matches('av')) %>% summarise_each(funs(mean)) %>%
melt(id.vars = 'sex') %>% spread(sex, value)
dtaSimple %>% group_by(sex) %>%
select(matches('av')) %>% summarise_each(funs(mean)) %>%
melt(id.vars = 'sex') %>% spread(sex, value)
dt = select(matches('av')) %>% summarise_each(funs(mean)) %>%
melt(id.vars = 'sex') %>% spread(sex, value)
dt = dtaSimple %>% group_by(sex) %>%
select(matches('av')) %>% summarise_each(funs(mean)) %>%
melt(id.vars = 'sex') %>% spread(sex, value)
dt
dt %>% summarise(value = "z Sum", FEMALE = 1444, MALE = 1440)
dt
dt %>% summarise(value = "z Sum", FEMALE = 1444, MALE = 1440)
dt %>% summarise(variable = "z Sum", FEMALE = 1444, MALE = 1440)
dt %>% summarise(variable = "z Sum", FEMALE = 1444, MALE = 1440) %>%
merge(dt, ., all = T)
dt %>% summarise(variable = "z Sum", 1 = 1444, 2 = 1440) %>%
merge(dt, ., all = T)
dt %>% summarise(variable = "z Sum", men = 1444, men = 1440) %>%
merge(dt, ., all = T)
colnames(dt)
colnames(dt) = c("variable", "1", "2")
colnames(dt) = c("variable", "men", "women")
dt %>% summarise(variable = "z Sum", men = 1444, men = 1440) %>%
merge(dt, ., all = T)
dt %>% summarise(variable = "z Sum", men = 1444, women = 1440) %>%
merge(dt, ., all = T)
dt %>% summarise(variable = "Sum", men = 1444, women = 1440) %>%
merge(dt, ., all = T)
dt
dtaSimple %>% group_by(sex) %>%
select(matches('av')) %>% summarise_each(funs(mean)) %>%
melt(id.vars = 'sex')
ags: [rstats]
---
```{r, warning=FALSE, message=FALSE}
library(plyr)
library(dplyr)
library(tidyr)
library(mtusRlocal)
library(knitr)
library(reshape2)
library(xtable)
load('/Users/giacomovagni/site/motsetchoses/_data/dtaSimple.RData')
```
```{r}
dt = dtaSimple %>% group_by(sex) %>%
select(matches('av')) %>% summarise_each(funs(mean)) %>%
melt(id.vars = 'sex') %>% spread(sex, value)
colnames(dt) = c("variable", "men", "women")
dt %>% summarise(variable = "Sum", men = 1444, women = 1440) %>%
merge(dt, ., all = T)
```
load('/Users/giacomovagni/site/motsetchoses/_data/UNPD_WMD_2012_MARITAL_STATUSUK.csv')
read.csv('/Users/giacomovagni/site/motsetchoses/_data/UNPD_WMD_2012_MARITAL_STATUSUK.csv')
undp = read.csv('/Users/giacomovagni/site/motsetchoses/_data/UNPD_WMD_2012_MARITAL_STATUSUK.csv')
UNDPmarriage2 = undp %>% select(Country, Year, Sex, Marital.status, X15.19, X20.24, X25.29, X30.34, X35.39, X40.44, X45.49, X50.54, X60.64, X65.) %>% melt(id.vars = c('Country', 'Year', 'Sex', 'Marital.status'))
UNDPmarriage2
undp2 = undp %>% select(Country, Year, Sex, Marital.status, X15.19, X20.24, X25.29, X30.34, X35.39, X40.44, X45.49, X50.54, X60.64, X65.) %>% melt(id.vars = c('Country', 'Year', 'Sex', 'Marital.status'))
undp2 = undp %>% select(Country, Year, Sex, Marital.status, X15.19, X20.24, X25.29, X30.34, X35.39, X40.44, X45.49, X50.54, X60.64, X65.) %>% melt(id.vars = c('Country', 'Year', 'Sex', 'Marital.status')) %>% filter(Country == 'United Kingdom' )
UNUK2050y = UNUK %>% filter(variable %in% c('X20.24', 'X25.29', 'X30.34', 'X35.39', 'X40.44', 'X45.49'))
undp2 = undp %>% select(Country, Year, Sex, Marital.status, X15.19, X20.24, X25.29, X30.34, X35.39, X40.44, X45.49, X50.54, X60.64, X65.) %>%
melt(id.vars = c('Country', 'Year', 'Sex', 'Marital.status')) %>% filter(Country == 'United Kingdom' )
undp2
undp2 = undp2 %>% filter(variable %in% c('X20.24', 'X25.29', 'X30.34', 'X35.39', 'X40.44', 'X45.49'))
undp2
UNUK2050ysummary = undp2 %>% group_by(Country, Year, Sex, Marital.status) %>%
summarise(meanshare = mean(value)) %>% unite(SexMSVar, Marital.status, Sex) %>%
select(-Country) %>% spread(SexMSVar, meanshare)
UNUK2050ysummary
UNUK2050ysummary = undp2 %>% filter(Marital.status %in% c("Married", "Single")) %>% group_by(Country, Year, Sex, Marital.status) %>%
summarise(meanshare = mean(value)) %>% unite(SexMSVar, Marital.status, Sex) %>%
select(-Country) %>% spread(SexMSVar, meanshare)
UNUK2050ysummary
kable(UNUK2050ysummary)
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
dt %>% summarise(variable = "Sum", men = 1444, women = 1440) %>%
merge(dt, ., all = T)
load('/Users/giacomovagni/site/motsetchoses/_data/dtaSimple.RData')
```
```{r}
dt = dtaSimple %>% group_by(sex) %>%
select(matches('av')) %>% summarise_each(funs(mean)) %>%
melt(id.vars = 'sex') %>% spread(sex, value)
colnames(dt) = c("variable", "men", "women")
dt %>% summarise(variable = "Sum", men = 1444, women = 1440) %>%
merge(dt, ., all = T)
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
undp = read.csv('/Users/giacomovagni/site/motsetchoses/_data/UNPD_WMD_2012_MARITAL_STATUSUK.csv')
undp
read.csv('/Users/giacomovagni/site/motsetchoses/_data/UNPD_WMD_2012_MARITAL_STATUSUK.csv')
undp = read.csv('/Users/giacomovagni/Desktop/UNPD_WMD_2012_MARITAL_STATUSUK.csv')
save(undp, file = '/Users/giacomovagni/site/motsetchoses/_data/undp.RData')
```{r}
undp2 = undp %>% select(Country, Year, Sex, Marital.status, X15.19, X20.24, X25.29, X30.34, X35.39, X40.44, X45.49, X50.54, X60.64, X65.) %>%
melt(id.vars = c('Country', 'Year', 'Sex', 'Marital.status')) %>% filter(Country == 'United Kingdom' )
undp2 = undp2 %>% filter(variable %in% c('X20.24', 'X25.29', 'X30.34', 'X35.39', 'X40.44', 'X45.49'))
UNUK2050ysummary = undp2 %>% filter(Marital.status %in% c("Married", "Single")) %>% group_by(Country, Year, Sex, Marital.status) %>%
summarise(meanshare = mean(value)) %>% unite(SexMSVar, Marital.status, Sex) %>%
select(-Country) %>% spread(SexMSVar, meanshare)
```
```{r}
kable(UNUK2050ysummary)
```
---
layout: post
title:  "Melt - Unite - Spread"
categories: [rstats]
tags: [rstats]
---
```{r, warning=FALSE, message=FALSE}
library(plyr)
library(dplyr)
library(tidyr)
library(mtusRlocal)
library(knitr)
library(reshape2)
library(xtable)
load(file = '/Users/giacomovagni/site/motsetchoses/_data/undp.RData')
```
```{r}
undp2 = undp %>% select(Country, Year, Sex, Marital.status, X15.19, X20.24, X25.29, X30.34, X35.39, X40.44, X45.49, X50.54, X60.64, X65.) %>%
melt(id.vars = c('Country', 'Year', 'Sex', 'Marital.status')) %>% filter(Country == 'United Kingdom' )
undp2 = undp2 %>% filter(variable %in% c('X20.24', 'X25.29', 'X30.34', 'X35.39', 'X40.44', 'X45.49'))
UNUK2050ysummary = undp2 %>% filter(Marital.status %in% c("Married", "Single")) %>% group_by(Country, Year, Sex, Marital.status) %>%
summarise(meanshare = mean(value)) %>% unite(SexMSVar, Marital.status, Sex) %>%
select(-Country) %>% spread(SexMSVar, meanshare)
```
```{r}
kable(UNUK2050ysummary)
```
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
load(file = '/Users/giacomovagni/site/motsetchoses/_data/undp.RData')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
servr::jekyll(command = '/Users/giacomovagni/.rvm/gems/ruby-2.2.1/wrappers/jekyll build')
